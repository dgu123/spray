<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>com.newmainsoftech</groupId>
		<artifactId>spray</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	
	<name>slingong_test</name>
	<groupId>com.newmainsoftech.spray</groupId>
	<artifactId>slingong_test</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<url>http://maven.apache.org</url>
  
	<properties>
		<test_src_by_apt>test_src_by_apt</test_src_by_apt>
			<!-- Directory to store test source file being auto-generated by apt. -->
		<test_src_to_merge>test_src_to_merge</test_src_to_merge>
			<!-- Directory to store test source file what refers to 
				source file being auto-generated by apt. -->
			
		<!-- To specify version of app being uploaded. 
			Upload to http://<version>.latest.<applicationName>.appspot.com -->
			<gae_application_version>test</gae_application_version>
				<!-- For maven-gae-plugin -->
			<appengine_app_version>${gae_application_version}</appengine_app_version>
				<!-- For appengine-maven-plugin -->
				
		<datanucleus_version>1.1.5</datanucleus_version>
		<datanucleus-enhancer_version>1.1.4</datanucleus-enhancer_version>
			<!-- Among datanucleus ver 1.x dependencies, datanucleus-enhancer dependency doesn not 
				have matching version with other datanucleus dependencies later than 1.1.4 -->
	</properties>

    <repositories>
    	<repository>
    		<name>Seasar Foundation repo</name>
    		<id>maven.seasar.org</id>
    		<url>https://www.seasar.org/maven/maven2</url>
    		<snapshots>
    			<enabled>true</enabled>
    		</snapshots>
    		<releases>
    			<updatePolicy>never</updatePolicy>
    		</releases>
    	</repository>
    </repositories>
  
	<dependencies>
		<!-- Compile scope -->
			<dependency>
				<groupId>com.newmainsoftech.spray</groupId>
				<artifactId>slingong</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			
		<!-- Provided scope -->
	        <dependency>
	        	<groupId>org.slim3</groupId>
	        	<artifactId>slim3-gen</artifactId>
	        	<version>${slim3_version}</version>
	        	<scope>provided</scope>
	        	<exclusions>
	        		<exclusion>
	        			<groupId>org.apache.ant</groupId>
	        			<artifactId>ant</artifactId>
	        		</exclusion>
	        	</exclusions>
	        </dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>1.0.2</version>
	        	<scope>provided</scope>
			</dependency>
				<!-- spring-aspect depends javax.persistence:persistence-api.
					see https://jira.springsource.org/browse/SPR-6819 
				-->
		<!-- Test scope -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring_version}</version>
				<scope>test</scope>
			</dependency>
			
			<!-- GAE libraries for local testing as described here:
				http://code.google.com/appengine/docs/java/howto/unittesting.html
			-->
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-api-labs</artifactId>
				<version>${gae_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-api-stubs</artifactId>
				<version>${gae_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-testing</artifactId>
				<version>${gae_version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- com.google.apphosting.utils.config.AbstractConfigXmlReader class 
					in appengine-testing has dependency on org.mortbay.xml.XmlParser class what 
					appengine-tools-sdk contains. -->
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-tools-sdk</artifactId>
				<version>${gae_version}</version>
				<scope>test</scope>
			</dependency>
	</dependencies>
	
	<build>
		<plugins>
            <plugin>
            	<groupId>org.codehaus.mojo</groupId>
            	<artifactId>build-helper-maven-plugin</artifactId>
            	<version>1.7</version>
            	<executions>
            		<execution>
            			<phase>generate-test-sources</phase>
            			<goals><goal>add-test-source</goal></goals>
            			<configuration>
            				<sources>
            					<source>${test_src_by_apt}</source>
            					<source>${test_src_to_merge}</source>
            				</sources>
            			</configuration>
            		</execution>
            	</executions>
            </plugin>
            <plugin>
            	<groupId>org.codehaus.mojo</groupId>
            	<artifactId>apt-maven-plugin</artifactId>
            	<version>1.0-alpha-3</version>
            	<executions>
            		<execution>
            			<phase>process-test-sources</phase>
            			<goals><goal>test-process</goal></goals>
		            	<configuration>
		           			<testOutputDirectory>${test_src_by_apt}</testOutputDirectory>
		            	</configuration>
            		</execution>
            	</executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
	  		<plugin>
	  			<groupId>org.codehaus.mojo</groupId>
	  			<artifactId>aspectj-maven-plugin</artifactId>
	  			<version>1.4</version>
	  			<dependencies>
				    <dependency>
				    	<groupId>org.aspectj</groupId>
				    	<artifactId>aspectjtools</artifactId>
				    	<version>${aspectj_version}</version>
				    </dependency>
	  			</dependencies>
	  			<executions>
	  			    <execution>
	  			        <goals>
	  			            <goal>test-compile</goal>
	  			        </goals>
	  			        <configuration>
		  			        <aspectLibraries>
		  			        	<aspectLibrary>
									<groupId>com.newmainsoftech.spray</groupId>
									<artifactId>slingong</artifactId>
		  			        	</aspectLibrary>
			  			    	<aspectLibrary>
									<groupId>org.springframework</groupId>
									<artifactId>spring-aspects</artifactId>
			  			    	</aspectLibrary>
		  			        </aspectLibraries>
	  			        </configuration>
	  			    </execution>
	  			</executions>
	  			<configuration>
	  			    <source>${maven_compiler_source}</source>
	  			    <target>${maven_compiler_target}</target>
	  			 	<showWeaveInfo>false</showWeaveInfo>
	  			 	<verbose>true</verbose>
	  			</configuration>
	  		</plugin>
			<!-- plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin -->
				<!-- in order to interpolate version from pom into appengine-web.xml -->
			
			<!-- plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.9.5</version>
			</plugin -->
				<!-- Type "mvn gae:run" to run project, "mvn gae:deploy" to upload to GAE. -->
			<!-- plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin -->
				<!-- For uploading app to appspot server automatically with maven-gae-plugin, 
					during release:perform -->
					
            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${appengine-maven-plugin_version}</version>
            </plugin>
		</plugins>
	</build>
</project>
