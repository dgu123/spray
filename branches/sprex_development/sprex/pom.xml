<?xml version="1.0"?>
<project 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" 
	xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<modelVersion>4.0.0</modelVersion>
  
	<parent>
		<groupId>com.newmainsoftech</groupId>
		<artifactId>spray</artifactId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>
	
	<!-- Project definitions -->  
	<name>Sprex</name>
	<description>Library of Spring extensions and configurations</description>
	<groupId>com.newmainsoftech.spray</groupId>
	<artifactId>sprex</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<url>https://code.google.com/p/spray/source/browse/#svn%2Ftrunk%2Fsprex%253Fstate%253Dclosed</url>
	<packaging>jar</packaging>
	
	<scm>
		<connection>scm:svn:http://spray.googlecode.com/svn/trunk/sprex</connection>
		<developerConnection>scm:svn:https://spray.googlecode.com/svn/trunk/sprex</developerConnection>
		<url>https://code.google.com/p/spray/source/checkout</url>
	</scm>
	
	<properties>
		<!-- tomcat7_maven_plugin_version>2.1</tomcat7_maven_plugin_version -->
		<skipSurefire>false</skipSurefire>
		<skipFailsafe>false</skipFailsafe>
	</properties>
	
	<dependencies>
		<!-- Compile scope -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring_version}</version>
			</dependency>
			
        <!-- Provided scope -->
			<!-- For JSP (including tag lib) -->
				<dependency>
				     <groupId>javax.servlet</groupId >
				     <artifactId>javax.servlet-api</artifactId>
				     <version>3.0.1</version >
					<scope>provided</scope >
				</dependency>
				<dependency>
				    <groupId>jstl</groupId>
				    <artifactId>jstl</artifactId>
				    <version>1.2</version>
					<scope>provided</scope >
				</dependency>
							
        <!-- Test scope -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring_version}</version>
				<scope>test</scope >
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5</version>
				<scope>test</scope >
			</dependency>
			<dependency>
				<groupId>net.sourceforge.htmlunit</groupId>
				<artifactId>htmlunit</artifactId>
				<version>2.12</version>
				<scope>test</scope >
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>1.3</version>
				<scope>test</scope >
			</dependency>
	</dependencies>	  
	
	<build>
    	<testResources>
    		<testResource>
    			<directory>${basedir}${file.separator}src${file.separator}test${file.separator}resources</directory>
    			<includes>
    				<include>**${file.separator}*</include>
    			</includes>
    		</testResource>
    		<testResource>
    			<directory>${basedir}${file.separator}src${file.separator}test${file.separator}webapp</directory>
    			<includes>
    				<include>**${file.separator}*</include>
    			</includes>
    		</testResource>    		
    	</testResources>
    	
    	<plugins>
	  		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-surefire-plugin</artifactId>
	  			<executions>
	  				<execution>
	  					<id>default-test</id>
	  					<goals><goal>test</goal></goals>
	  					<phase>test</phase>
	  					<configuration>
	  						<excludes>
	  							<exclude>**/*IntegrationTest.java</exclude>
	  						</excludes>
	  					</configuration>
	  				</execution>
	  			</executions>
	  			<configuration>
	  				<skipTests>${skipSurefire}</skipTests>
	  			</configuration>
	  		</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.0.0.RC0</version>
				<executions>
					<execution>
						<id>start_pre_integration_test</id>
						<phase>pre-integration-test</phase>
						<goals><goal>start</goal></goals>
						<configuration>
							<daemon>true</daemon>
							<detail>true</detail>
							<useTestScope>true</useTestScope>
							<webAppSourceDirectory>src/test/webapp</webAppSourceDirectory>
							<!-- webApp's baseResource element does not work. 
								Instead, use webAppSourceDirectory element.
							<webApp>  
								<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
									<resourcesAsCSV>src/test/webapp</resourcesAsCSV>
								</baseResource>
							</webApp -->
						</configuration>
					</execution>
					<execution>
						<id>stop_post_integration_test</id>
						<phase>post-integration-test</phase>
						<goals><goal>stop</goal></goals>
					</execution>
				</executions>
				<configuration>
					<stopPort>9999</stopPort>
					<stopKey>sprex_jetty</stopKey>
				</configuration>
			</plugin>
			<!-- Construct exploded webapp directory for maven-tomcat-plugin.
				But, since decided not use maven-tomcat-plugin because of its quality, 
				these does not need too now. 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>prep_pre_integration_test</id>
						<goals><goal>exploded</goal></goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<detail>true</detail>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<warSourceDirectory>${basedir}${file.separator}src${file.separator}test${file.separator}webapp</warSourceDirectory>
							<webappDirectory>${project.build.directory}${file.separator}exploded_webapp</webappDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-antrun-plugin</artifactId>
	  			<executions>
	  				<execution>
	  					<id>prep_pre_integration_test</id>
	  					<goals><goal>run</goal></goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<target name="prep_pre_integration_test_target">
								<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath"/>
								<copy todir="${project.build.directory}${file.separator}exploded_webapp${file.separator}WEB-INF${file.separator}classes${file.separator}com">
									<fileset dir="${project.build.testOutputDirectory}${file.separator}com" />
								</copy>
							</target>
						</configuration>
	  				</execution>
	  			</executions>
			</plugin -->
			<!-- Decided use jetty-maven-plugin instead of tomcat7-maven-plugin 
				because of quality of tomcat7-maven-plugin. 
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat7_maven_plugin_version}</version>
				<executions>
					<execution>
						<id>start_pre_integration_test</id>
						<phase>pre-integration-test</phase>
						<goals><goal>run</goal></goals>
						<configuration>
							<fork>true</fork>
							<ignorePackaging>true</ignorePackaging>
							<useTestClasspath>true</useTestClasspath>
							<warSourceDirectory>${basedir}${file.separator}src${file.separator}test${file.separator}webapp</warSourceDirectory>
							<warDirectory>${project.build.directory}${file.separator}exploded_webapp</warDirectory>
							<tomcatLoggingFile>${basedir}${file.separator}src${file.separator}test${file.separator}tomcatconf${file.separator}logging.properties</tomcatLoggingFile>
						</configuration>
					</execution>
					<execution>
						<id>stop_post_integration_test</id>
						<phase>post-integration-test</phase>
						<goals><goal>shutdown</goal></goals>
					</execution>
				</executions>
				<configuration>	
					<port>8080</port>
					<detail>true</detail>
				</configuration>
			</plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.14.1</version>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals><goal>integration-test</goal></goals>
						<phase>integration-test</phase>
						<configuration>
							<includes>
								<include>**/*IntegrationTest.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>default-verify</id>
						<goals><goal>verify</goal></goals>
						<phase>verify</phase>
					</execution>
				</executions>
				<configuration>
					<skipTests>${skipFailsafe}</skipTests>
				</configuration>
			</plugin>
    	</plugins>
	</build>
	
</project>
