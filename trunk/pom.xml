<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>3.0</maven>
			<!-- As stated in http://docs.codehaus.org/display/MAVENUSER/Antrun+Plugin, 
				Maven ver 2.x has significant plugin classpath bug affects to maven-antrun-plugin. 
				Hence prevent being used with Maven ver 2.x. -->
	</prerequisites>
		
	<organization>
		<name>NewMain Softech</name>
		<url>http://newmainsoftech.com</url>
	</organization>
	
	<name>Spray</name>
	<description>Spray is multi-module project consisted of Spring utilities</description>
	<inceptionYear>2011</inceptionYear>
	<groupId>com.newmainsoftech</groupId>
	<artifactId>spray</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<url>https://code.google.com/p/spray</url>
	
	<developers>
		<developer>
			<email>artymt@gmail.com</email>
			<roles>
				<role>project administrator</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
	
	<properties>
		<spring_version>3.1.3.RELEASE</spring_version>
	
		<!-- Specify AppEngine version for your project. It should match SDK version 
			pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
			<gae_version>1.7.0</gae_version>
			<appengine-maven-plugin_version>1.7.4</appengine-maven-plugin_version>
		
		<slim3_version>1.0.13</slim3_version>
		
	    <maven_compiler_source>${java.specification.version}</maven_compiler_source>
	    <maven_compiler_target>${java.specification.version}</maven_compiler_target>
		
		<aspectj_version>1.7.0</aspectj_version>
		
		<junit_version>4.11</junit_version>

		<!-- Sets the project's default encoding.
			http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding 
			Don't let your Mac use a crazy non-standard encoding. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
			
		<!--  This is just for "eclipse:eclipse" goal to always attempt downloading sources -->
		<downloadSources>true</downloadSources>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring_version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<!-- These dependencies are here just for enabling logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>0.9.24</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>1.7.2</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		<!-- Compile scope -->
			<!-- These dependencies are here just for enabling logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
			</dependency>
		<!-- Test scope -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit_version}</version>
				<scope>test</scope>
			</dependency>
	</dependencies>
	
  <modules>
    <module>slingong</module>
    <module>slingong_test</module>
  </modules>
  
  <build>
  	<pluginManagement>
	  	<plugins>	  	
	  		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-compiler-plugin</artifactId>
	  			<version>3.0</version>
				<configuration>
					<source>${maven_compiler_source}</source>
					<target>${maven_compiler_target}</target>
	  			    <showDeprecation>true</showDeprecation>
	  			    <showWarnings>true</showWarnings>
				</configuration>
	  		</plugin>
	  		<plugin>
	  			<groupId>org.codehaus.mojo</groupId>
	  			<artifactId>buildnumber-maven-plugin</artifactId>
	  			<version>1.2</version>
	  			<executions>
	  				<execution>
	  					<phase>prepare-package</phase>
	  					<goals><goal>create</goal></goals>
	  				</execution>
	  			</executions>
	  			<configuration>
	  				<doCheck>false</doCheck>
	  					<!-- Decided to set false to doCheck parameter in order to avoid tediously 
	  						providing false as command line argument because maven-release-plugin 
	  						generates work files and for building development build for integration 
	  						test. Just need to be careful to sync with SCM when releasing snapshot 
	  						build. -->
	  				<doUpdate>true</doUpdate>
	  			</configuration>
	  		</plugin>
	  	</plugins>
  	</pluginManagement>
  </build>
</project>