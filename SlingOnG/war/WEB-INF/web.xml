<?xml version="1.0" encoding="utf-8"?>
<web-app 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	version="2.5" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<servlet>
		<servlet-name>SlingOnG</servlet-name>
		<servlet-class>slingong.datastore.SlingOnGServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SlingOnG</servlet-name>
		<url-pattern>/slingong</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
<!-- For Spring on GAE/J -->
<!-- Please make modification to suite for your environment, 
since these elements below have been autogenerated as just simple sample. 
-->
<!-- Be mindful if you will use stateful view technology with stateless Spring -->
	<listener>
        <!-- Conveniently load ApplicationContext. 
		For info, refer to http://static.springsource.org/spring/docs/current/spring-framework-reference/htmlsingle/spring-framework-reference.html#context-create. 
		-->
        <!-- This listener should be registered after Log4jConfigListener in web.xml, if the latter is used. -->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <!-- To enable webapplication-related scopes like request, session, and global session on Spring. 
RequestContextListener binds the HTTP request object to the Thread that is servicing that request. 
This makes beans that are request- and session-scoped available further down the call chain. 
-->
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <filter>
        <!-- Request's character encoding type setting by Spring. 
For info, refer to http://www.springbyexample.org/examples/basic-webapp-internationalization.html. 
-->
        <filter-name>org.springframework.web.filter.CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>org.springframework.web.filter.CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>org.springframework.web.servlet.DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value/>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Please make modification on url-pattern to suite for your environment. -->
    <servlet-mapping>
        <servlet-name>org.springframework.web.servlet.DispatcherServlet</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>
	<context-param>
        <!--Turn HTML escaping on appiication-wide-->
        <param-name>defaultHtmlEscape</param-name>
        <param-value>true</param-value>
    </context-param>
	<!-- End for Spring on GAE/J -->
    
<!-- For Slim3 --> 
	<!-- This DatastoreFilter rolls back active transactions automatically when, per each request, 
	there is the active (global) transaction left from preceding request processing. 
	-->
	<filter>
	    <filter-name>datastoreFilter</filter-name>
	    <filter-class>org.slim3.datastore.DatastoreFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>datastoreFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	
	<!-- For Slim3 global transaction -->
	<servlet>
	    <servlet-name>GlobalTransactionServlet
	    </servlet-name>
	    <servlet-class>org.slim3.datastore.GlobalTransactionServlet
	    </servlet-class>
	    <load-on-startup>1</load-on-startup>
	</servlet>
	 
	<servlet-mapping>
	    <servlet-name>GlobalTransactionServlet
	    </servlet-name>
	    <url-pattern>/slim3/gtx</url-pattern>
	</servlet-mapping>
	
	<security-constraint>
	    <web-resource-collection>
			<web-resource-name>Slim3Gtx</web-resource-name>
	        <url-pattern>/slim3/gtx/*</url-pattern>
	    </web-resource-collection>
	    <auth-constraint>
	        <role-name>admin</role-name>
	    </auth-constraint>
	</security-constraint>
	<!-- End for Slim3 global transaction -->
<!-- End for Slim3 -->
</web-app>
